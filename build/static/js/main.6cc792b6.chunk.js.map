{"version":3,"sources":["util/getTotalAmount.js","components/useFetch.js","util/getAPIUrl.js","components/Results.js","components/Button.js","components/Select.js","App.js","index.js"],"names":["getTotalAmount","data","reduce","total","item","Cases","useFetch","url","useState","isLoading","setIsLoading","hasError","setHasError","badRequest","setBadRequest","setData","fetchData","a","fetch","response","json","result","ok","useEffect","getAPIUrl","status","from","to","console","error","length","toLowerCase","Results","state","useParams","start","setStart","end","setEnd","handelChange","e","set","target","value","log","className","type","onChange","Button","children","Select","App","path","ReactDOM","render","document","getElementById"],"mappings":"oQAOeA,EAPQ,SAACC,GACpB,OAAQA,EAAKC,QAAO,SAACC,EAAOC,GACxB,OAAOD,EAAQC,EAAKC,QACrB,IC+BQC,EA/BE,SAACC,GAAS,IAAD,EACUC,oBAAS,GADnB,mBACjBC,EADiB,KACNC,EADM,OAEQF,oBAAS,GAFjB,mBAEjBG,EAFiB,KAEPC,EAFO,OAGYJ,oBAAS,GAHrB,mBAGjBK,EAHiB,KAGLC,EAHK,OAIAN,qBAJA,mBAIjBP,EAJiB,KAIXc,EAJW,KAMlBC,EAAS,uCAAG,gCAAAC,EAAA,sEAEdP,GAAa,GAFC,SAGSQ,MAAMX,GAHf,cAGRY,EAHQ,gBAIOA,EAASC,OAJhB,UAIRC,EAJQ,QAKVF,EAASG,GALC,kCAMOtB,EAAeqB,GANtB,QAMNpB,EANM,OAOZc,EAAQd,GAPI,wBASZa,GAAc,GATF,0DAYdF,GAAY,GAZE,yBAcdF,GAAa,GAdC,6EAAH,qDAsBf,OAJAa,qBAAU,WACRP,MACC,CAACT,IAEG,CAAEE,YAAWI,aAAYF,WAAUV,SCP7BuB,EAhBI,SAACC,EAAQC,EAAMC,GAChC,GAAY,MAARD,EACFE,QAAQC,MAAR,kEACK,GAAoB,IAAhBH,EAAKI,OACdF,QAAQC,MAAR,oCACK,GAAU,MAANF,EACTC,QAAQC,MAAR,+DACK,IAAkB,IAAdF,EAAGG,OAGZ,MAAM,gDAAN,OAAuDL,EAAOM,cAA9D,iBAAoFL,EAApF,eAA+FC,GAF/FC,QAAQC,MAAR,6BAKF,MAAO,I,OCSMG,EA1BC,WAAO,IACbC,EAAUC,cAAVD,MADY,EAEMzB,mBAAS,cAFf,mBAEb2B,EAFa,KAENC,EAFM,OAGE5B,mBAAS,cAHX,mBAGb6B,EAHa,KAGRC,EAHQ,KAKdC,EAAe,SAACC,EAAGC,GACvBA,EAAID,EAAEE,OAAOC,QAETpC,EAAMiB,EAAUS,EAAOE,EAAOE,GARhB,EAS8B/B,EAASC,GAAnDE,EATY,EASZA,UAAWI,EATC,EASDA,WAAYF,EATX,EASWA,SAAUV,EATrB,EASqBA,KAEzC,OADA2B,QAAQgB,IAAI3C,GAEV,sBAAK4C,UAAU,QAAf,UAEE,uBAAOA,UAAW,QAAQC,KAAK,OAAOH,MAAOR,EAAOY,SAAU,SAACP,GAAD,OAAOD,EAAaC,EAAGJ,MACrF,uBAAQS,UAAW,QAAQC,KAAK,OAAOH,MAAON,EAAKU,SAAU,SAACP,GAAD,OAAOD,EAAaC,EAAGF,MACnF7B,IAAaE,GAAW,4CACxBE,IAAeF,GAAU,gDACzBA,IAAaF,GAAY,8DACxBE,IAAaF,GAAaR,GAC1B,oBAAI4C,UAAqB,cAAVZ,EAAwB,QAAU,SAAjD,SAA4DhC,QCjBrD+C,EAJA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OAAO,wBAAQJ,UAAU,MAAlB,SAAyBI,KCenBC,EAhBA,WACb,OACE,sBAAKL,UAAU,QAAf,UACE,cAAC,IAAD,CAAMlB,GAAG,aAAT,SACE,cAAC,EAAD,0BAEF,cAAC,IAAD,CAAMA,GAAG,aAAT,SACE,cAAC,EAAD,0BAEF,cAAC,IAAD,CAAMA,GAAG,IAAT,SACE,cAAC,EAAD,yBCMOwB,MAZf,WACE,OACE,eAAC,IAAD,WACE,oBAAIN,UAAU,QAAd,mCACA,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOO,KAAK,UAAUH,SAAU,cAAC,EAAD,YCRxCI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6cc792b6.chunk.js","sourcesContent":["const getTotalAmount = (data) => {\n    return  data.reduce((total, item) => {\n        return total + item.Cases\n    }, 0);\n\n}\n\nexport default getTotalAmount;","import { useState, useEffect } from \"react\";\r\nimport getTotalAmount from \"../util/getTotalAmount\";\r\n\r\nconst useFetch = (url) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [badRequest, setBadRequest] = useState(false);\r\n  const [data, setData] = useState();\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(url);\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        const data = await getTotalAmount(result);\r\n        setData(data);\r\n      } else {\r\n        setBadRequest(true);\r\n      }\r\n    } catch {\r\n      setHasError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { isLoading, badRequest, hasError, data };\r\n};\r\n\r\nexport default useFetch;\r\n","/**\n * This function will generate the URL for you to call given the parameters\n * \n * status - should be a status in the statuses file\n * from - should be a date in the format YYYY-MM-DD\n * to - should be a date in the format YYYY-MM-DD\n */\n\n const getAPIUrl = (status, from, to) => {\n  if (from == null) {\n    console.error(`Please provide a from parameter to the getAPIUrl function`);\n  } else if (from.length === 0) {\n    console.error(`The from parameter is empty`);\n  } else if (to == null) {\n    console.error(`Please provide a to parameter to the getAPIUrl function`);\n  } else if (to.length === 0) {\n    console.error(`The to parameter is empty`);\n  } else {\n    return `https://api.covid19api.com/country/nl/status/${status.toLowerCase()}?from=${from}&to=${to}`;\n  }\n\n  return '';\n};\n\nexport default getAPIUrl;\n","import { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\nimport getAPIUrl from \"../util/getAPIUrl\";\r\nconst Results = () => {\r\n  const { state } = useParams();\r\n  const [start, setStart] = useState(\"2021-03-04\");\r\n  const [end, setEnd] = useState(\"2021-03-04\");\r\n\r\n  const handelChange = (e, set) => {\r\n    set(e.target.value);\r\n  };\r\n  const url = getAPIUrl(state, start, end);\r\n  const { isLoading, badRequest, hasError, data } = useFetch(url);\r\n  console.log(data);\r\n  return (\r\n    <div className='title'>\r\n      \r\n      <input className =\"input\" type=\"date\" value={start} onChange={(e) => handelChange(e, setStart)}></input>\r\n      <input  className =\"input\" type=\"date\" value={end} onChange={(e) => handelChange(e, setEnd)}></input>\r\n      {isLoading &&!hasError&& <p>Loading ...</p>}\r\n      {badRequest && !hasError&&<p>Bad Request ...</p>}\r\n      {hasError && !isLoading&& <p>Ops something went wrong ...</p>}\r\n      {!hasError && !isLoading && data && (\r\n        <h1 className={state === \"recovered\" ? \"green\" : \"orange\"}>{data}</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\n\r\n\r\nconst Button = ({ children }) => {\r\n  return <button className=\"btn\">{children}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Select = () => {\r\n  return (\r\n    <div className='title'>\r\n      <Link to=\"/recovered\">\r\n        <Button>Recovered</Button>\r\n      </Link>\r\n      <Link to=\"/confirmed\">\r\n        <Button>Confirmed</Button>\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <Button>Home</Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Results from \"./components/Results\";\n\nimport Select from \"./components/Select\";\n\nfunction App() {\n  return (\n    <Router >\n      <h1 className='title'>Covid-19 Netherlands </h1>\n      <Select />\n      <Switch>\n        <Route path=\"/:state\" children={<Results />}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}