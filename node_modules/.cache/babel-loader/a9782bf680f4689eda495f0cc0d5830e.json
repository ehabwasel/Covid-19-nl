{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport getTotalAmount from \"../util/getTotalAmount\";\n\nconst useFetch = url => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [badRequest, setBadRequest] = useState(false);\n  const [data, setData] = useState();\n\n  const fetchData = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(url);\n      const result = await response.json();\n\n      if (response.ok) {\n        const data = await getTotalAmount(result);\n        setData(data);\n      } else {\n        setBadRequest(true);\n      }\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [url]);\n  return {\n    isLoading,\n    badRequest,\n    hasError,\n    data\n  };\n};\n\n_s(useFetch, \"aSffn+5qKYTaWlm3yRWZDp1+Nvo=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/ehab/Downloads/React Covid-19 App Khaled 2/src/components/useFetch.js"],"names":["useState","useEffect","getTotalAmount","useFetch","url","isLoading","setIsLoading","hasError","setHasError","badRequest","setBadRequest","data","setData","fetchData","response","fetch","result","json","ok"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC;;AAEA,QAAMa,SAAS,GAAG,YAAY;AAC5B,QAAI;AACFP,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAD,CAA5B;AACA,YAAMY,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;;AACA,UAAIH,QAAQ,CAACI,EAAb,EAAiB;AACf,cAAMP,IAAI,GAAG,MAAMT,cAAc,CAACc,MAAD,CAAjC;AACAJ,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAHD,MAGO;AACLD,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,KAVD,CAUE,MAAM;AACNF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAZD,SAYU;AACRF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAhBD;;AAkBAL,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACT,GAAD,CAFM,CAAT;AAIA,SAAO;AAAEC,IAAAA,SAAF;AAAaI,IAAAA,UAAb;AAAyBF,IAAAA,QAAzB;AAAmCI,IAAAA;AAAnC,GAAP;AACD,CA7BD;;GAAMR,Q;;AA+BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport getTotalAmount from \"../util/getTotalAmount\";\r\n\r\nconst useFetch = (url) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [badRequest, setBadRequest] = useState(false);\r\n  const [data, setData] = useState();\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(url);\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        const data = await getTotalAmount(result);\r\n        setData(data);\r\n      } else {\r\n        setBadRequest(true);\r\n      }\r\n    } catch {\r\n      setHasError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { isLoading, badRequest, hasError, data };\r\n};\r\n\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}